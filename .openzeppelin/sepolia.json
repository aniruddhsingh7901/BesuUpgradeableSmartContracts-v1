{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcaC555CEf17D5834ECfDc55679054DD32de32749",
      "kind": "transparent"
    },
    {
      "address": "0xFCFA3Ce0d485D22De8E745b427fe447875399AF3",
      "kind": "transparent"
    },
    {
      "address": "0xC59D4D9F7f322E40611Ed3F073d35A54Ef6EeE8D",
      "kind": "transparent"
    },
    {
      "address": "0x224c73e447be6a1b70f2c175F0328B8019F71Dbd",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a19bd2e0b4b1eda040c1a018ecaed5ef136df2ab554a8d046635e2e718a5bb98": {
      "address": "0x56fF81aBB5cdaC478bF236db717e4976b2ff841e",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)651_storage",
            "contract": "State",
            "src": "contracts/state/State.sol:29"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "651",
            "type": "t_contract(IStateTransitionVerifier)5674",
            "contract": "State",
            "src": "contracts/state/State.sol:34"
          },
          {
            "label": "_stateData",
            "offset": 0,
            "slot": "652",
            "type": "t_struct(Data)10669_storage",
            "contract": "State",
            "src": "contracts/state/State.sol:39"
          },
          {
            "label": "_gistData",
            "offset": 0,
            "slot": "702",
            "type": "t_struct(Data)8789_storage",
            "contract": "State",
            "src": "contracts/state/State.sol:44"
          },
          {
            "label": "_defaultIdType",
            "offset": 0,
            "slot": "752",
            "type": "t_bytes2",
            "contract": "State",
            "src": "contracts/state/State.sol:49"
          },
          {
            "label": "_defaultIdTypeInitialized",
            "offset": 2,
            "slot": "752",
            "type": "t_bool",
            "contract": "State",
            "src": "contracts/state/State.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes2": {
            "label": "bytes2",
            "numberOfBytes": "2"
          },
          "t_contract(IOracleProofValidator)1876": {
            "label": "contract IOracleProofValidator",
            "numberOfBytes": "20"
          },
          "t_contract(IState)2119": {
            "label": "contract IState",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes2,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes2 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StateCrossChainStorage)5042_storage": {
            "label": "struct State.StateCrossChainStorage",
            "members": [
              {
                "label": "_idToStateReplacedAt",
                "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_rootToGistRootReplacedAt",
                "type": "t_mapping(t_bytes2,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_oracleProofValidator",
                "type": "t_contract(IOracleProofValidator)1876",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_state",
                "type": "t_contract(IState)2119",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Entry)10646_storage)dyn_storage": {
            "label": "struct StateLib.Entry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RootEntry)8816_storage)dyn_storage": {
            "label": "struct SmtLib.RootEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)651_storage": {
            "label": "uint256[651]",
            "numberOfBytes": "20832"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IStateTransitionVerifier)5674": {
            "label": "contract IStateTransitionVerifier",
            "numberOfBytes": "20"
          },
          "t_enum(NodeType)8765": {
            "label": "enum SmtLib.NodeType",
            "members": [
              "EMPTY",
              "LEAF",
              "MIDDLE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes2,t_bool)": {
            "label": "mapping(bytes2 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Entry)10646_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StateLib.Entry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Node)8843_storage)": {
            "label": "mapping(uint256 => struct SmtLib.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Data)10669_storage": {
            "label": "struct StateLib.Data",
            "members": [
              {
                "label": "stateEntries",
                "type": "t_mapping(t_uint256,t_array(t_struct(Entry)10646_storage)dyn_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stateIndexes",
                "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isIdTypeSupported",
                "type": "t_mapping(t_bytes2,t_bool)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)47_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_struct(Data)8789_storage": {
            "label": "struct SmtLib.Data",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint256,t_struct(Node)8843_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rootEntries",
                "type": "t_array(t_struct(RootEntry)8816_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rootIndexes",
                "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxDepth",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)45_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_struct(Entry)10646_storage": {
            "label": "struct StateLib.Entry",
            "members": [
              {
                "label": "state",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "block",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Node)8843_storage": {
            "label": "struct SmtLib.Node",
            "members": [
              {
                "label": "nodeType",
                "type": "t_enum(NodeType)8765",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "childLeft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childRight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RootEntry)8816_storage": {
            "label": "struct SmtLib.RootEntry",
            "members": [
              {
                "label": "root",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "createdAtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createdAtBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:iden3.storage.StateCrossChain": [
            {
              "contract": "State",
              "label": "_idToStateReplacedAt",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/state/State.sol:63",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "State",
              "label": "_rootToGistRootReplacedAt",
              "type": "t_mapping(t_bytes2,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/state/State.sol:64",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "State",
              "label": "_oracleProofValidator",
              "type": "t_contract(IOracleProofValidator)1876",
              "src": "contracts/state/State.sol:65",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "State",
              "label": "_state",
              "type": "t_contract(IState)2119",
              "src": "contracts/state/State.sol:66",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x56fF81aBB5cdaC478bF236db717e4976b2ff841e",
        "0xcFee2acB66671067f73191f6691A3b8E43D10137"
      ]
    },
    "d47d1c7e2dfc149180b3240cc36325ab2999927994859b0bf648b1ed96d54a51": {
      "address": "0x56fF81aBB5cdaC478bF236db717e4976b2ff841e",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IState)2119": {
            "label": "contract IState",
            "numberOfBytes": "20"
          },
          "t_struct(IdentityTreeStoreMainStorage)1554_storage": {
            "label": "struct IdentityTreeStore.IdentityTreeStoreMainStorage",
            "members": [
              {
                "label": "_state",
                "type": "t_contract(IState)2119",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:iden3.storage.IdentityTreeStore.Main": [
            {
              "contract": "IdentityTreeStore",
              "label": "_state",
              "type": "t_contract(IState)2119",
              "src": "contracts/identitytreestore/IdentityTreeStore.sol:50",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "373f722a7adad078ec281abc342bfd09753167d3dc47bf2ac92820eb9321608b": {
      "address": "0x56fF81aBB5cdaC478bF236db717e4976b2ff841e",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint64)dyn_storage": {
            "label": "uint64[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ICircuitValidator)296": {
            "label": "contract ICircuitValidator",
            "numberOfBytes": "20"
          },
          "t_contract(IState)522": {
            "label": "contract IState",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint64,t_struct(Proof)1450_storage))": {
            "label": "mapping(address => mapping(uint64 => struct ZKPVerifierBase.Proof))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(ICircuitValidator)296,t_bool)": {
            "label": "mapping(contract ICircuitValidator => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bytes_storage)": {
            "label": "mapping(string => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_address)": {
            "label": "mapping(uint64 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(Proof)1450_storage)": {
            "label": "mapping(uint64 => struct ZKPVerifierBase.Proof)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(ZKPRequest)534_storage)": {
            "label": "mapping(uint64 => struct IZKPVerifier.ZKPRequest)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Proof)1450_storage": {
            "label": "struct ZKPVerifierBase.Proof",
            "members": [
              {
                "label": "isVerified",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "storageFields",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorVersion",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "blockTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "metadata",
                "type": "t_mapping(t_string_memory_ptr,t_bytes_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RequestDisableStorage)974_storage": {
            "label": "struct RequestDisableable.RequestDisableStorage",
            "members": [
              {
                "label": "_requestDisabling",
                "type": "t_mapping(t_uint64,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RequestOwnershipStorage)1075_storage": {
            "label": "struct RequestOwnership.RequestOwnershipStorage",
            "members": [
              {
                "label": "_requestOwners",
                "type": "t_mapping(t_uint64,t_address)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ValidatorWhitelistStorage)1307_storage": {
            "label": "struct ValidatorWhitelist.ValidatorWhitelistStorage",
            "members": [
              {
                "label": "_validatorWhitelist",
                "type": "t_mapping(t_contract(ICircuitValidator)296,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ZKPRequest)534_storage": {
            "label": "struct IZKPVerifier.ZKPRequest",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_contract(ICircuitValidator)296",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ZKPVerifierStorage)1482_storage": {
            "label": "struct ZKPVerifierBase.ZKPVerifierStorage",
            "members": [
              {
                "label": "_proofs",
                "type": "t_mapping(t_address,t_mapping(t_uint64,t_struct(Proof)1450_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_requests",
                "type": "t_mapping(t_uint64,t_struct(ZKPRequest)534_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_requestIds",
                "type": "t_array(t_uint64)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_state",
                "type": "t_contract(IState)522",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:iden3.storage.ValidatorWhitelist": [
            {
              "contract": "ValidatorWhitelist",
              "label": "_validatorWhitelist",
              "type": "t_mapping(t_contract(ICircuitValidator)296,t_bool)",
              "src": "contracts/verifiers/ValidatorWhitelist.sol:12",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:iden3.storage.RequestDisableable": [
            {
              "contract": "RequestDisableable",
              "label": "_requestDisabling",
              "type": "t_mapping(t_uint64,t_bool)",
              "src": "contracts/verifiers/RequestDisableable.sol:10",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:iden3.storage.RequestOwnership.sol": [
            {
              "contract": "RequestOwnership",
              "label": "_requestOwners",
              "type": "t_mapping(t_uint64,t_address)",
              "src": "contracts/verifiers/RequestOwnership.sol:10",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:iden3.storage.ZKPVerifier": [
            {
              "contract": "ZKPVerifierBase",
              "label": "_proofs",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_struct(Proof)1450_storage))",
              "src": "contracts/verifiers/ZKPVerifierBase.sol:35",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ZKPVerifierBase",
              "label": "_requests",
              "type": "t_mapping(t_uint64,t_struct(ZKPRequest)534_storage)",
              "src": "contracts/verifiers/ZKPVerifierBase.sol:36",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ZKPVerifierBase",
              "label": "_requestIds",
              "type": "t_array(t_uint64)dyn_storage",
              "src": "contracts/verifiers/ZKPVerifierBase.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ZKPVerifierBase",
              "label": "_state",
              "type": "t_contract(IState)522",
              "src": "contracts/verifiers/ZKPVerifierBase.sol:38",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b30065d9ef4652dbcff1f07a0a6911059c2b08c3aa209c77a9ec2f1beee85dc8": {
      "address": "0x56fF81aBB5cdaC478bF236db717e4976b2ff841e",
      "layout": {
        "solcVersion": "0.8.26",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IState)2119": {
            "label": "contract IState",
            "numberOfBytes": "20"
          },
          "t_contract(IVerifier)2170": {
            "label": "contract IVerifier",
            "numberOfBytes": "20"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IVerifier)2170)": {
            "label": "mapping(string => contract IVerifier)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CredentialAtomicQueryValidatorBaseStorage)6504_storage": {
            "label": "struct CredentialAtomicQueryValidatorBase.CredentialAtomicQueryValidatorBaseStorage",
            "members": [
              {
                "label": "_circuitIdToVerifier",
                "type": "t_mapping(t_string_memory_ptr,t_contract(IVerifier)2170)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_supportedCircuitIds",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "state",
                "type": "t_contract(IState)2119",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revocationStateExpirationTimeout",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "proofExpirationTimeout",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "gistRootExpirationTimeout",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "_inputNameToIndex",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(InitializableStorage)141_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "iden3.storage.CredentialAtomicQueryValidator": [
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "_circuitIdToVerifier",
              "type": "t_mapping(t_string_memory_ptr,t_contract(IVerifier)2170)",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:22",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "_supportedCircuitIds",
              "type": "t_array(t_string_storage)dyn_storage",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:23",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "state",
              "type": "t_contract(IState)2119",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "revocationStateExpirationTimeout",
              "type": "t_uint256",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:25",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "proofExpirationTimeout",
              "type": "t_uint256",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:26",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "gistRootExpirationTimeout",
              "type": "t_uint256",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:27",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "CredentialAtomicQueryValidatorBase",
              "label": "_inputNameToIndex",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/validators/CredentialAtomicQueryValidatorBase.sol:28",
              "offset": 0,
              "slot": "6"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
